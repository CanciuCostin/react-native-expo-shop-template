// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TagsList Component matches snapshot 1`] = `
<RCTSafeAreaView
  style={
    {
      "alignSelf": "center",
      "height": 66.5,
    }
  }
>
  <RCTScrollView
    data={
      [
        {
          "tagId": "1",
          "tagName": "Tag 1",
        },
        {
          "tagId": "2",
          "tagName": "Tag 2",
        },
        {
          "tagId": "3",
          "tagName": "Tag 3",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "rgb(255, 255, 255)",
              "borderColor": "rgb(216, 216, 216)",
              "borderRadius": 10,
              "borderWidth": 1,
              "justifyContent": "center",
              "marginHorizontal": 7.5,
              "opacity": 1,
              "paddingHorizontal": 22.5,
            }
          }
        >
          <Text
            style={
              [
                {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 24,
                  "fontWeight": "normal",
                },
                {},
              ]
            }
            testID="custom-text"
          >
            Tag 1
          </Text>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "rgb(255, 255, 255)",
              "borderColor": "rgb(216, 216, 216)",
              "borderRadius": 10,
              "borderWidth": 1,
              "justifyContent": "center",
              "marginHorizontal": 7.5,
              "opacity": 1,
              "paddingHorizontal": 22.5,
            }
          }
        >
          <Text
            style={
              [
                {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 24,
                  "fontWeight": "normal",
                },
                {},
              ]
            }
            testID="custom-text"
          >
            Tag 2
          </Text>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "rgb(255, 255, 255)",
              "borderColor": "rgb(216, 216, 216)",
              "borderRadius": 10,
              "borderWidth": 1,
              "justifyContent": "center",
              "marginHorizontal": 7.5,
              "opacity": 1,
              "paddingHorizontal": 22.5,
            }
          }
        >
          <Text
            style={
              [
                {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 24,
                  "fontWeight": "normal",
                },
                {},
              ]
            }
            testID="custom-text"
          >
            Tag 3
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
